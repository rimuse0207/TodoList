{"version":3,"sources":["components/ToDoTemplate.js","components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoTemplates","styled","div","Title","Content","TodoTemplate","children","TodoInserts","form","Input","input","Button","button","TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","placeholder","type","TodoListItems","CheckBox","Text","props","checked","Remove","TodoListItem","todo","onRemove","onToggle","id","text","onClick","TodoLists","TodoList","todos","map","key","Body","createGlobalStyle","App","setTodos","nextId","useRef","current","concat","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77c88105.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplates = styled.div`\n  width: 512px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 6rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\nconst Title = styled.div`\n  background-color: #22b8cf;\n  color: white;\n  height: 4rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Content = styled.div`\n  background-color: white;\n`;\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <TodoTemplates>\n      <Title>Today List</Title>\n      <Content>{children}</Content>\n    </TodoTemplates>\n  );\n};\n\nexport default TodoTemplate;\n","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoInserts = styled.form`\n  display: flex;\n  background-color: #495057;\n`;\n\nconst Input = styled.input`\n  background: none;\n  outline: none;\n  border: none;\n  padding: 0.5rem;\n  font-size: 1.125rem;\n  line-height: 1.5;\n  color: white;\n  &::placeholder {\n    color: #dee2e6;\n  }\n  flex: 1;\n`;\n\nconst Button = styled.button`\n  background: none;\n  outline: none;\n  border: none;\n  background-color: #868e96;\n  color: white;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: 0.1s background ease-in;\n  &:hover {\n    background-color: #adb5bd;\n  }\n`;\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState(\"\");\n  const onChange = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  const onSubmit = useCallback(\n    e => {\n      onInsert(value);\n      setValue(\"\");\n      e.preventDefault();\n    },\n    [onInsert, value]\n  );\n  return (\n    <TodoInserts onSubmit={onSubmit}>\n      <Input\n        placeholder=\"Please Enter Your TodoList.\"\n        value={value}\n        onChange={onChange}\n      ></Input>\n      <Button type=\"submit\">+</Button>\n    </TodoInserts>\n  );\n};\n\nexport default TodoInsert;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoListItems = styled.div`\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  &:nth-child(even) {\n    background-color: #f8f9fa;\n  }\n`;\nconst CheckBox = styled.div`\n  cursor: pointer;\n  flex: 1;\n  display: flex;\n  align-items: center;\n`;\nconst Text = styled.div`\n  margin-left: 0.5rem;\n  flex: 1;\n  ${props =>\n    props.checked ? \"color: #22b8cf; text-decoration: line-through;\" : \"\"}\n`;\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 1.5rem;\n  color: #ff6b6b;\n  cursor: pointer;\n  &:hover {\n    color: ff8787;\n  }\n`;\n\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\n  const { id, text, checked } = todo;\n  return (\n    <TodoListItems>\n      <CheckBox onClick={() => onToggle(id)}>\n        {checked ? \"‚úÖ\" : \"‚úîÔ∏è\"}„ÄÄ<Text checked={checked}>{text}</Text>\n      </CheckBox>\n      <Remove onClick={() => onRemove(id)}>üóë</Remove>\n    </TodoListItems>\n  );\n};\n\nexport default TodoListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TodoListItem from \"./TodoListItem\";\nconst TodoLists = styled.div`\n  min-height: 320px;\n  max-height: 513px;\n\n  overflow-y: auto;\n`;\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  return (\n    <TodoLists>\n      {todos.map(todo => (\n        <TodoListItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        ></TodoListItem>\n      ))}\n    </TodoLists>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useRef, useCallback } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport TodoTemplate from \"./components/ToDoTemplate\";\nimport TodoInsert from \"./components/TodoInsert\";\nimport TodoList from \"./components/TodoList\";\n\nconst Body = createGlobalStyle`\n  body{\n    margin:0;\n    padding:0;\n    background-color: #e9ecef;\n  }\n  \n  \n`;\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, text: \"Insert Your TodoList\", checked: true },\n    { id: 2, text: \"You can do it!\", checked: true },\n    { id: 3, text: \"I can do it\", checked: false }\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = { id: nextId.current, text, checked: false };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos]\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos]\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo\n        )\n      );\n    },\n    [todos]\n  );\n\n  return (\n    <>\n      <Body></Body>\n      <TodoTemplate>\n        <TodoInsert onInsert={onInsert}></TodoInsert>\n        <TodoList\n          todos={todos}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        ></TodoList>\n      </TodoTemplate>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}